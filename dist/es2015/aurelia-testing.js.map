{"version":3,"file":"aurelia-testing.js","sources":["../../src/compile-spy.ts","../../src/view-spy.ts","../../src/wait.ts","../../src/component-tester.ts","../../src/aurelia-testing.ts"],"sourcesContent":["import { type IStaticResourceConfig, TargetInstruction } from 'aurelia-templating';\nimport { getLogger } from 'aurelia-logging';\nimport { DOM } from 'aurelia-pal';\n\n/**\n * Attribute to be placed on any element to have it emit the View Compiler's\n * TargetInstruction into the debug console, giving you insight into all the\n * parsed bindings, behaviors and event handers for the targeted element.\n */\nexport class CompileSpy {\n  /** @internal */\n  static get inject() { return [DOM.Element, TargetInstruction]; }\n  /** @internal */\n  static $resource: IStaticResourceConfig = {\n    type: 'attribute',\n    name: 'compile-spy'\n  }\n  /**\n   * Creates and instanse of CompileSpy.\n   * @param element target element on where attribute is placed on.\n   * @param instruction instructions for how the target element should be enhanced.\n   */\n  constructor(element: Element, instruction: TargetInstruction) {\n    getLogger('compile-spy').info(element.toString(), instruction);\n  }\n}\n","import { IStaticResourceConfig } from 'aurelia-templating';\nimport { getLogger, Logger } from 'aurelia-logging';\n\n/**\n * Attribute to be placed on any HTML element in a view to emit the View instance\n * to the debug console, giving you insight into the live View instance, including\n * all child views, live bindings, behaviors and more.\n */\nexport class ViewSpy {\n  static $resource: IStaticResourceConfig = {\n    type: 'attribute',\n    name: 'view-spy'\n  };\n\n  private logger: Logger;\n  private value: any;\n  private view: any;\n\n  /**\n   * Creates a new instance of ViewSpy.\n   */\n  constructor() {\n    this.logger = getLogger('view-spy');\n  }\n\n  private _log(lifecycleName: string, context?: {}) {\n    if (!this.value && lifecycleName === 'created') {\n      this.logger.info(lifecycleName, this.view);\n    } else if (this.value && this.value.indexOf(lifecycleName) !== -1) {\n      this.logger.info(lifecycleName, this.view, context);\n    }\n  }\n\n  /**\n   * Invoked when the target view is created.\n   * @param view The target view.\n   */\n  public created(view: any) {\n    this.view = view;\n    this._log('created');\n  }\n\n  /**\n   * Invoked when the target view is bound.\n   * @param bindingContext The target view's binding context.\n   */\n  public bind(bindingContext: {}) {\n    this._log('bind', bindingContext);\n  }\n\n  /**\n   * Invoked when the target element is attached to the DOM.\n   */\n  public attached() {\n    this._log('attached');\n  }\n\n  /**\n   * Invoked when the target element is detached from the DOM.\n   */\n  public detached() {\n    this._log('detached');\n  }\n\n  /**\n   * Invoked when the target element is unbound.\n   */\n  public unbind() {\n    this._log('unbind');\n  }\n}\n","/**\n * Generic function to wait for something to happen. Uses polling\n * @param getter: a getter function that returns anything else than `null` or an\n *                empty array or an empty jQuery object when the\n *                condition is met\n * @param options: lookup options, defaults to\n *                 `{present: true, interval: 50, timeout: 5000}`\n */\nexport function waitFor<T>(getter: () => T, options: {\n  present?: boolean,\n  interval?: number,\n  timeout?: number\n} = {present: true, interval: 50, timeout: 5000}): Promise<T> {\n  // prevents infinite recursion if the request times out\n  let timedOut = false;\n\n  options = {\n    present: true,\n    interval: 50,\n    timeout: 5000,\n    ...options\n  };\n\n  function wait(): Promise<T> {\n    const element = getter();\n    // boolean is needed here, hence the length > 0\n    const found = element !== null && (!(element instanceof NodeList) &&\n      !(element as any).jquery || (element as any).length > 0);\n\n    if (!options.present === !found || timedOut) {\n      return Promise.resolve(element);\n    }\n\n    return new Promise(rs => setTimeout(rs, options.interval)).then(wait);\n  }\n\n  // We generate the error here to capture the stack trace, but we will only throw it if it times out\n  const timeoutError = new Error(options.present ? 'Element not found' : 'Element not removed');\n\n  return Promise.race([\n    new Promise(\n      (_, rj) => setTimeout(() => {\n        timedOut = true;\n        rj(timeoutError);\n      }, options.timeout)\n    ),\n    wait()\n  ]) as Promise<T>;\n}\n\nexport function waitForDocumentElement(selector: string, options?: {\n  present?: boolean,\n  interval?: number,\n  timeout?: number\n}): Promise<Element> {\n  return waitFor(() => document.querySelector(selector) as Element, options);\n}\n\nexport function waitForDocumentElements(selector: string, options?: {\n  present?: boolean,\n  interval?: number,\n  timeout?: number\n}): Promise<NodeListOf<Element>> {\n  return waitFor(() => document.querySelectorAll(selector), options);\n}\n","import { View } from 'aurelia-templating';\nimport type { Aurelia, FrameworkConfiguration } from 'aurelia-framework';\nimport { waitFor } from './wait';\n\ninterface AureliaWithRoot extends Aurelia {\n  root: ViewWithControllers;\n}\n\ninterface ViewWithControllers extends View {\n  controllers: {viewModel: any}[];\n}\n\nexport class StageComponent {\n  public static withResources<T = any>(resources: string | string[] = []): ComponentTester<T> {\n    return new ComponentTester().withResources(resources);\n  }\n}\n\nexport class ComponentTester<T = any> {\n  public bind: (bindingContext: {}) => Promise<void>;\n  public attached: () => Promise<void>;\n  public detached: () => Promise<void>;\n  public unbind: () => Promise<void>;\n  public element: Element;\n  public viewModel: T;\n\n  private html: string;\n  private resources: string | Function | (string | Function)[] = [];\n  private bindingContext: {};\n  private rootView: View;\n  private host: HTMLDivElement;\n\n  public configure(aurelia: Aurelia): FrameworkConfiguration {\n    return aurelia.use.standardConfiguration();\n  }\n\n  public bootstrap(configure: (aurelia: Aurelia) => FrameworkConfiguration) {\n    this.configure = configure;\n  }\n\n  public withResources(resources: string | string[]): this {\n    this.resources = resources;\n    return this;\n  }\n\n  public inView(html: string): this {\n    this.html = html;\n    return this;\n  }\n\n  public boundTo(bindingContext: {}): this {\n    this.bindingContext = bindingContext;\n    return this;\n  }\n\n  public manuallyHandleLifecycle(): this {\n    this._prepareLifecycle();\n    return this;\n  }\n\n  public create(bootstrap: (configure: (aurelia: Aurelia) => Promise<void>) => Promise<void>): Promise<void> {\n    return bootstrap((aurelia: AureliaWithRoot) => {\n      return Promise.resolve(this.configure(aurelia)).then(() => {\n        if (this.resources) {\n          aurelia.use.globalResources(this.resources);\n        }\n\n        return aurelia.start().then(() => {\n          this.host = document.createElement('div');\n          this.host.innerHTML = this.html;\n\n          document.body.appendChild(this.host);\n\n          return aurelia.enhance(this.bindingContext, this.host).then(() => {\n            this.rootView = aurelia.root;\n            this.element = this.host.firstElementChild as Element;\n\n            if (aurelia.root.controllers.length) {\n              this.viewModel = aurelia.root.controllers[0].viewModel;\n            }\n\n            return new Promise(resolve => setTimeout(() => resolve(), 0)) as Promise<void>;\n          });\n        });\n      });\n    });\n  }\n\n  public dispose(): Element {\n    if (this.host === undefined || this.rootView === undefined) {\n      throw new Error(\n        'Cannot call ComponentTester.dispose() before ComponentTester.create()'\n      );\n    }\n\n    this.rootView.detached();\n    this.rootView.unbind();\n\n    return (this.host.parentNode as Node).removeChild(this.host);\n  }\n\n  private _prepareLifecycle() {\n    // bind\n    const bindPrototype = View.prototype.bind;\n    // tslint:disable-next-line:no-empty\n    View.prototype.bind = () => {};\n    this.bind = bindingContext => new Promise(resolve => {\n      View.prototype.bind = bindPrototype;\n      if (bindingContext !== undefined) {\n        this.bindingContext = bindingContext;\n      }\n      this.rootView.bind(this.bindingContext);\n      setTimeout(() => resolve(), 0);\n    });\n\n    // attached\n    const attachedPrototype = View.prototype.attached;\n    // tslint:disable-next-line:no-empty\n    View.prototype.attached = () => {};\n    this.attached = () => new Promise(resolve => {\n      View.prototype.attached = attachedPrototype;\n      this.rootView.attached();\n      setTimeout(() => resolve(), 0);\n    });\n\n    // detached\n    this.detached = () => new Promise(resolve => {\n      this.rootView.detached();\n      setTimeout(() => resolve(), 0);\n    });\n\n    // unbind\n    this.unbind = () => new Promise(resolve => {\n      this.rootView.unbind();\n      setTimeout(() => resolve(), 0);\n    });\n  }\n\n  public waitForElement(selector: string, options?: {\n    present?: boolean,\n    interval?: number,\n    timeout?: number\n  }): Promise<Element> {\n    return waitFor(() => this.element.querySelector(selector) as Element, options);\n  }\n\n  public waitForElements(selector: string, options?: {\n    present?: boolean,\n    interval?: number,\n    timeout?: number\n  }): Promise<NodeListOf<Element>> {\n    return waitFor(() => this.element.querySelectorAll(selector) as NodeListOf<Element>, options);\n  }\n}\n","import type { FrameworkConfiguration } from 'aurelia-framework';\nimport { CompileSpy } from './compile-spy';\nimport { ViewSpy } from './view-spy';\n\nexport * from './compile-spy';\nexport * from './view-spy';\nexport * from './component-tester';\nexport * from './wait';\n\nexport function configure(config: FrameworkConfiguration) {\n  config.globalResources([CompileSpy, ViewSpy]);\n}\n"],"names":[],"mappings":";;;;MASa,UAAU,CAAA;IAarB,WAAY,CAAA,OAAgB,EAAE,WAA8B,EAAA;AAC1D,QAAA,SAAS,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,WAAW,CAAC,CAAC;KAChE;AAbD,IAAA,WAAW,MAAM,GAAK,EAAA,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,iBAAiB,CAAC,CAAC,EAAE;;AAEzD,UAAA,CAAA,SAAS,GAA0B;AACxC,IAAA,IAAI,EAAE,WAAW;AACjB,IAAA,IAAI,EAAE,aAAa;CACpB;;MCRU,OAAO,CAAA;AAalB,IAAA,WAAA,GAAA;AACE,QAAA,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,UAAU,CAAC,CAAC;KACrC;IAEO,IAAI,CAAC,aAAqB,EAAE,OAAY,EAAA;QAC9C,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,aAAa,KAAK,SAAS,EAAE;YAC9C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;AAC5C,SAAA;AAAM,aAAA,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,EAAE;AACjE,YAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;AACrD,SAAA;KACF;AAMM,IAAA,OAAO,CAAC,IAAS,EAAA;AACtB,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,QAAA,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KACtB;AAMM,IAAA,IAAI,CAAC,cAAkB,EAAA;AAC5B,QAAA,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,cAAc,CAAC,CAAC;KACnC;IAKM,QAAQ,GAAA;AACb,QAAA,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;KACvB;IAKM,QAAQ,GAAA;AACb,QAAA,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;KACvB;IAKM,MAAM,GAAA;AACX,QAAA,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACrB;;AA5DM,OAAA,CAAA,SAAS,GAA0B;AACxC,IAAA,IAAI,EAAE,WAAW;AACjB,IAAA,IAAI,EAAE,UAAU;CACjB;;SCJa,OAAO,CAAI,MAAe,EAAE,OAAA,GAIxC,EAAC,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE,EAAE,OAAO,EAAE,IAAI,EAAC,EAAA;IAE9C,IAAI,QAAQ,GAAG,KAAK,CAAC;AAErB,IAAA,OAAO,GACL,MAAA,CAAA,MAAA,CAAA,EAAA,OAAO,EAAE,IAAI,EACb,QAAQ,EAAE,EAAE,EACZ,OAAO,EAAE,IAAI,EACV,EAAA,OAAO,CACX,CAAC;AAEF,IAAA,SAAS,IAAI,GAAA;AACX,QAAA,MAAM,OAAO,GAAG,MAAM,EAAE,CAAC;AAEzB,QAAA,MAAM,KAAK,GAAG,OAAO,KAAK,IAAI,KAAK,EAAE,OAAO,YAAY,QAAQ,CAAC;YAC/D,CAAE,OAAe,CAAC,MAAM,IAAK,OAAe,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAE3D,IAAI,CAAC,OAAO,CAAC,OAAO,KAAK,CAAC,KAAK,IAAI,QAAQ,EAAE;AAC3C,YAAA,OAAO,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AACjC,SAAA;QAED,OAAO,IAAI,OAAO,CAAC,EAAE,IAAI,UAAU,CAAC,EAAE,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACvE;AAGD,IAAA,MAAM,YAAY,GAAG,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,GAAG,mBAAmB,GAAG,qBAAqB,CAAC,CAAC;IAE9F,OAAO,OAAO,CAAC,IAAI,CAAC;AAClB,QAAA,IAAI,OAAO,CACT,CAAC,CAAC,EAAE,EAAE,KAAK,UAAU,CAAC,MAAK;YACzB,QAAQ,GAAG,IAAI,CAAC;YAChB,EAAE,CAAC,YAAY,CAAC,CAAC;AACnB,SAAC,EAAE,OAAO,CAAC,OAAO,CAAC,CACpB;AACD,QAAA,IAAI,EAAE;AACP,KAAA,CAAe,CAAC;AACnB,CAAC;AAEe,SAAA,sBAAsB,CAAC,QAAgB,EAAE,OAIxD,EAAA;AACC,IAAA,OAAO,OAAO,CAAC,MAAM,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAY,EAAE,OAAO,CAAC,CAAC;AAC7E,CAAC;AAEe,SAAA,uBAAuB,CAAC,QAAgB,EAAE,OAIzD,EAAA;AACC,IAAA,OAAO,OAAO,CAAC,MAAM,QAAQ,CAAC,gBAAgB,CAAC,QAAQ,CAAC,EAAE,OAAO,CAAC,CAAC;AACrE;;MCpDa,cAAc,CAAA;AAClB,IAAA,OAAO,aAAa,CAAU,SAAA,GAA+B,EAAE,EAAA;QACpE,OAAO,IAAI,eAAe,EAAE,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;KACvD;AACF,CAAA;MAEY,eAAe,CAAA;AAA5B,IAAA,WAAA,GAAA;QASU,IAAS,CAAA,SAAA,GAA8C,EAAE,CAAC;KA8HnE;AAzHQ,IAAA,SAAS,CAAC,OAAgB,EAAA;AAC/B,QAAA,OAAO,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,CAAC;KAC5C;AAEM,IAAA,SAAS,CAAC,SAAuD,EAAA;AACtE,QAAA,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;KAC5B;AAEM,IAAA,aAAa,CAAC,SAA4B,EAAA;AAC/C,QAAA,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AAC3B,QAAA,OAAO,IAAI,CAAC;KACb;AAEM,IAAA,MAAM,CAAC,IAAY,EAAA;AACxB,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,QAAA,OAAO,IAAI,CAAC;KACb;AAEM,IAAA,OAAO,CAAC,cAAkB,EAAA;AAC/B,QAAA,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;AACrC,QAAA,OAAO,IAAI,CAAC;KACb;IAEM,uBAAuB,GAAA;QAC5B,IAAI,CAAC,iBAAiB,EAAE,CAAC;AACzB,QAAA,OAAO,IAAI,CAAC;KACb;AAEM,IAAA,MAAM,CAAC,SAA4E,EAAA;AACxF,QAAA,OAAO,SAAS,CAAC,CAAC,OAAwB,KAAI;AAC5C,YAAA,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,MAAK;gBACxD,IAAI,IAAI,CAAC,SAAS,EAAE;oBAClB,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAC7C,iBAAA;gBAED,OAAO,OAAO,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,MAAK;oBAC/B,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;oBAC1C,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC;oBAEhC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAErC,oBAAA,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,MAAK;AAC/D,wBAAA,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,IAAI,CAAC;wBAC7B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,iBAA4B,CAAC;AAEtD,wBAAA,IAAI,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;AACnC,4BAAA,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;AACxD,yBAAA;AAED,wBAAA,OAAO,IAAI,OAAO,CAAC,OAAO,IAAI,UAAU,CAAC,MAAM,OAAO,EAAE,EAAE,CAAC,CAAC,CAAkB,CAAC;AACjF,qBAAC,CAAC,CAAC;AACL,iBAAC,CAAC,CAAC;AACL,aAAC,CAAC,CAAC;AACL,SAAC,CAAC,CAAC;KACJ;IAEM,OAAO,GAAA;QACZ,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAE;AAC1D,YAAA,MAAM,IAAI,KAAK,CACb,uEAAuE,CACxE,CAAC;AACH,SAAA;AAED,QAAA,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;AACzB,QAAA,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;AAEvB,QAAA,OAAQ,IAAI,CAAC,IAAI,CAAC,UAAmB,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC9D;IAEO,iBAAiB,GAAA;AAEvB,QAAA,MAAM,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;QAE1C,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,MAAO,GAAC,CAAC;AAC/B,QAAA,IAAI,CAAC,IAAI,GAAG,cAAc,IAAI,IAAI,OAAO,CAAC,OAAO,IAAG;AAClD,YAAA,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,aAAa,CAAC;YACpC,IAAI,cAAc,KAAK,SAAS,EAAE;AAChC,gBAAA,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;AACtC,aAAA;YACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YACxC,UAAU,CAAC,MAAM,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC;AACjC,SAAC,CAAC,CAAC;AAGH,QAAA,MAAM,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;QAElD,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,MAAO,GAAC,CAAC;QACnC,IAAI,CAAC,QAAQ,GAAG,MAAM,IAAI,OAAO,CAAC,OAAO,IAAG;AAC1C,YAAA,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,iBAAiB,CAAC;AAC5C,YAAA,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;YACzB,UAAU,CAAC,MAAM,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC;AACjC,SAAC,CAAC,CAAC;QAGH,IAAI,CAAC,QAAQ,GAAG,MAAM,IAAI,OAAO,CAAC,OAAO,IAAG;AAC1C,YAAA,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;YACzB,UAAU,CAAC,MAAM,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC;AACjC,SAAC,CAAC,CAAC;QAGH,IAAI,CAAC,MAAM,GAAG,MAAM,IAAI,OAAO,CAAC,OAAO,IAAG;AACxC,YAAA,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;YACvB,UAAU,CAAC,MAAM,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC;AACjC,SAAC,CAAC,CAAC;KACJ;IAEM,cAAc,CAAC,QAAgB,EAAE,OAIvC,EAAA;AACC,QAAA,OAAO,OAAO,CAAC,MAAM,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,QAAQ,CAAY,EAAE,OAAO,CAAC,CAAC;KAChF;IAEM,eAAe,CAAC,QAAgB,EAAE,OAIxC,EAAA;AACC,QAAA,OAAO,OAAO,CAAC,MAAM,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,QAAQ,CAAwB,EAAE,OAAO,CAAC,CAAC;KAC/F;AACF;;AChJK,SAAU,SAAS,CAAC,MAA8B,EAAA;IACtD,MAAM,CAAC,eAAe,CAAC,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC,CAAC;AAChD;;;;"}